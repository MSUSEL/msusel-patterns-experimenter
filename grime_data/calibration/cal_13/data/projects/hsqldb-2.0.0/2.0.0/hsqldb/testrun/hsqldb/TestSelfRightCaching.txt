====
    The MIT License (MIT)

    MSUSEL Arc Framework
    Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
    Software Engineering Laboratory and Idaho State University, Informatics and
    Computer Science, Empirical Software Engineering Laboratory

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
====

-- Rights Map and Adminstrative Right Caching tests

DROP TABLE m IF EXISTS;
CREATE TABLE m(i int);
INSERT INTO m VALUES(11);
CREATE USER cani PASSWORD cani;
/*u0*/GRANT CHANGE_AUTHORIZATION TO cani;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Sanity check of individual grants for user and for public
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO PUBLIC;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM PUBLIC RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Dual grants, but with SELECTs in between (which will rebuild the caches)
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO cani;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO PUBLIC;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM PUBLIC RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Dual grants.  No cache build until both GRANTS added.
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO PUBLIC;
GRANT SELECT ON m TO cani;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM PUBLIC RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Ditto, in different sequence.
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO cani;
GRANT SELECT ON m TO PUBLIC;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM PUBLIC RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- ... different sequence
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO PUBLIC;
GRANT SELECT ON m TO cani;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM PUBLIC RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Ditto, in different sequence.
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO cani;
GRANT SELECT ON m TO PUBLIC;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM PUBLIC RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;


-- REPEAT SAME WITH A NAMED ROLE INSTEAD OF PUBLIC
CONNECT USER sa PASSWORD "";
CREATE ROLE sesamerole;
GRANT sesamerole TO cani;

-- Sanity check of individual grants for user and for sesamerole
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO sesamerole;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM sesamerole RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Dual grants, but with SELECTs in between (which will rebuild the caches)
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO cani;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO sesamerole;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM sesamerole RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Dual grants.  No cache build until both GRANTS added.
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO sesamerole;
GRANT SELECT ON m TO cani;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM sesamerole RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Ditto, in different sequence.
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO cani;
GRANT SELECT ON m TO sesamerole;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM sesamerole RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- ... different sequence
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO sesamerole;
GRANT SELECT ON m TO cani;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM sesamerole RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;

-- Ditto, in different sequence.
CONNECT USER sa PASSWORD "";
GRANT SELECT ON m TO cani;
GRANT SELECT ON m TO sesamerole;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM cani RESTRICT;
CONNECT USER cani PASSWORD cani;
/*c1*/SELECT * FROM m;
CONNECT USER sa PASSWORD "";
REVOKE SELECT ON m FROM sesamerole RESTRICT;
CONNECT USER cani PASSWORD cani;
/*e*/SELECT * FROM m;
