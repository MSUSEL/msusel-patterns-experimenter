====
    The MIT License (MIT)

    MSUSEL Arc Framework
    Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
    Software Engineering Laboratory and Idaho State University, Informatics and
    Computer Science, Empirical Software Engineering Laboratory

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
====

-- AUXILIAR TABLES + DECLARES
DROP TABLE tt1 IF EXISTS;
DROP TABLE tt2 IF EXISTS;
CREATE Cached TABLE tt1(
   ID INTEGER NOT NULL PRIMARY KEY,
   tt2ref INTEGER
   );

CREATE Cached TABLE tt2(
   ID INTEGER NOT NULL PRIMARY KEY
   );
ALTER TABLE tt1 ADD CONSTRAINT fk2 FOREIGN KEY (tt2ref) REFERENCES tt2(ID);

-- CREATE SIMPLE FUNCTIONS - INVALID

-- Exception no returns
/*e*/CREATE FUNCTION function_test()

-- Exception no body
/*e*/CREATE FUNCTION function_test() RETURNS INTEGER
  BEGIN ATOMIC
  END
/*e*/call function_test()
/*e*/DROP FUNCTION function_test

-- Exception - invalid in parameter
/*e*/CREATE FUNCTION function_test(IN value INTEGER) RETURNS INTEGER
  RETURNS 10

-- Exception - not supported OUT parameter
/*e*/CREATE FUNCTION function_test(OUT val INTEGER) RETURNS INTEGER
  RETURNS 10

-- CREATE SIMPLE FUNCTIONS

-- No body
CREATE FUNCTION function_test() RETURNS INTEGER
  RETURN 10;
/*r10*/call function_test()
DROP FUNCTION function_test

-- Simple function - IN parameter
CREATE FUNCTION function_test(IN val INTEGER) RETURNS INTEGER
  RETURN val + 10;
/*r20*/call function_test(10)
DROP FUNCTION function_test

-- Simple select
CREATE FUNCTION function_test() RETURNS INTEGER
  RETURN (SELECT id FROM tt2)
INSERT INTO tt2(ID) VALUES(1);
/*r1*/call function_test()
DROP FUNCTION function_test

CREATE FUNCTION test( in x INT)
 returns table(i INT, v VARCHAR(100))
 begin atomic
   declare y int;
   set y= x;
   return TABLE(select id, firstname from customer where id > y);
 end

call test(10)
