/**
 * The MIT License (MIT)
 *
 * MSUSEL Arc Framework
 * Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
 * Software Engineering Laboratory and Idaho State University, Informatics and
 * Computer Science, Empirical Software Engineering Laboratory
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.geotools.data.ogr.bridj;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.geotools.data.ogr.bridj.OsrLibrary.locale_data;
/**
 * <i>native declaration : /home/aaime/devel/gdal/gdal-1.8.0/ogr/ogr_srs_api.h:3687</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("osr") 
public class __locale_struct extends StructObject {
	public __locale_struct() {
		super();
	}
	public __locale_struct(Pointer pointer) {
		super(pointer);
	}
	/**
	 * Note: LC_ALL is not a valid index into this array.<br>
	 * 13 = __LC_LAST.<br>
	 * C type : locale_data*[13]
	 */
	@Array({13}) 
	@Field(0) 
	public Pointer<Pointer<locale_data > > __locales() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * To increase the speed of this solution we add some special members.<br>
	 * C type : const unsigned short int*
	 */
	@Field(1) 
	public Pointer<Integer > __ctype_b() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * To increase the speed of this solution we add some special members.<br>
	 * C type : const unsigned short int*
	 */
	@Field(1) 
	public __locale_struct __ctype_b(Pointer<Integer > __ctype_b) {
		this.io.setPointerField(this, 1, __ctype_b);
		return this;
	}
	/// C type : const int*
	@Field(2) 
	public Pointer<Integer > __ctype_tolower() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : const int*
	@Field(2) 
	public __locale_struct __ctype_tolower(Pointer<Integer > __ctype_tolower) {
		this.io.setPointerField(this, 2, __ctype_tolower);
		return this;
	}
	/// C type : const int*
	@Field(3) 
	public Pointer<Integer > __ctype_toupper() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : const int*
	@Field(3) 
	public __locale_struct __ctype_toupper(Pointer<Integer > __ctype_toupper) {
		this.io.setPointerField(this, 3, __ctype_toupper);
		return this;
	}
	/**
	 * Note: LC_ALL is not a valid index into this array.<br>
	 * C type : const char*[13]
	 */
	@Array({13}) 
	@Field(4) 
	public Pointer<Pointer<Byte > > __names() {
		return this.io.getPointerField(this, 4);
	}
}
