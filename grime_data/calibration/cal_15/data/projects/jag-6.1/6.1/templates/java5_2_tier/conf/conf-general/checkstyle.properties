#
# The MIT License (MIT)
#
# MSUSEL Arc Framework
# Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
# Software Engineering Laboratory and Idaho State University, Informatics and
# Computer Science, Empirical Software Engineering Laboratory
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

<!-- -------------------------------------------------- -->
<!--       Configuration file for Checkstyle 2.4+       -->
<!--     This excellent source code grammar checker     -->
<!-- can be found at http://checkstyle.sourceforge.net/ -->
<!-- -------------------------------------------------- -->

<!-- Reporting configuration -->

<!-- checkstyle.cache.file=checkstyle.cache -->

<!-- JavaDoc checks -->
checkstyle.javadoc.scope=protected
checkstyle.require.packagehtml=false
checkstyle.require.version=false
checkstyle.allow.noauthor=false
checkstyle.javadoc.checkUnusedThrows=false

<!-- Naming checks -->
checkstyle.pattern.member=^[a-z][a-zA-Z0-9]*$
checkstyle.pattern.publicmember=^f[A-Z][a-zA-Z0-9]*$
checkstyle.pattern.const=^[A-Z](_?[A-Z0-9]+)*$
checkstyle.pattern.static=^[a-z][a-zA-Z0-9]*$
checkstyle.pattern.parameter=^[a-z][a-zA-Z0-9]*$
checkstyle.pattern.package=^[a-z]+(\.[a-zA-Z_][a-zA-Z_0-9]*)*$
checkstyle.pattern.type=^[A-Z][a-zA-Z0-9]*$
checkstyle.pattern.method=^[a-z][a-zA-Z0-9]*$
checkstyle.pattern.localvar=^[a-z][a-zA-Z0-9]*$
checkstyle.pattern.localfinalvar=^[a-z][a-zA-Z0-9]*$

<!-- Header checks -->
checkstyle.header.file=
checkstyle.header.ignoreline=
checkstyle.header.regexp=false

<!-- Imports checks -->
checkstyle.ignore.imports=true
checkstyle.illegal.imports=sun

<!-- Size Violations checks -->
checkstyle.maxlinelen=120
checkstyle.tab.width=8
checkstyle.ignore.importlength=false
checkstyle.ignore.maxlinelen=^$
checkstyle.maxmethodlen=150
checkstyle.maxconstructorlen=150
checkstyle.maxfilelen=3000
checkstyle.maxparameters=7

<!-- Whitespace checks -->
checkstyle.allow.tabs=false
checkstyle.ignore.whitespace=false
checkstyle.ignore.whitespace.cast=false
checkstyle.paren.pad=nospace
checkstyle.wrap.operator=eol

<!-- Violators checks -->
checkstyle.ignore.public.in.interface=false
checkstyle.allow.protected=false
checkstyle.allow.package=false
checkstyle.pattern.publicmember=^f[A-Z][a-zA-Z0-9]*$

<!-- Blocks checks -->
checkstyle.ignore.braces=true
checkstyle.block.try=stmt
checkstyle.block.catch=text
checkstyle.block.finally=stmt
checkstyle.lcurly.type=eol
checkstyle.lcurly.method=eol
checkstyle.lcurly.other=eol
checkstyle.rcurly=alone

<!-- Miscellaneous checks -->
checkstyle.pattern.todo=TODO:
checkstyle.ignore.longell=false
checkstyle.illegal.instantiations=


