/**
 * The MIT License (MIT)
 *
 * MSUSEL Arc Framework
 * Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
 * Software Engineering Laboratory and Idaho State University, Informatics and
 * Computer Science, Empirical Software Engineering Laboratory
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.finalist.jaggenerator;

import com.finalist.jaggenerator.modules.*;

import java.util.*;
import javax.swing.*;

/**
 *
 * @author  hillie
 */
public class SelectRefs extends javax.swing.JDialog {
   private DefaultListModel listModel = new DefaultListModel();
   private ArrayList refList;


   /** Creates new form SelectRefs for Sesson EJBs to design a Session Facade to Entity EJBs. */
   public SelectRefs(JFrame parent, Session session, ArrayList refList) {
      super(parent, true);
      this.setTitle("Select entity bean(s)");
      this.refList = refList;
      initComponents();
      setBounds(50, 10, 200, 700);
      Root root = (Root) session.getRoot();
      ArrayList refs = root.getRefs();
      for (int i = 0; i < refs.size(); i++) {
         listModel.addElement((String) refs.get(i));
      }
      list.setModel(listModel);
      refList = refs;
   }


   /** Creates new form SelectRefs for CMR in Entity EJBs */
   public SelectRefs(JFrame parent, Entity entity, ArrayList refList) {
      super(parent, true);
      this.refList = refList;
      initComponents();
      setBounds(50, 10, 200, 700);
      Root root = (Root) entity.getRoot();
      ArrayList refs = root.getRefs();
      for (int i = 0; i < refs.size(); i++) {
         listModel.addElement((String) refs.get(i));
      }
      list.setModel(listModel);
      refList = refs;
   }


   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   private void initComponents() {//GEN-BEGIN:initComponents
      java.awt.GridBagConstraints gridBagConstraints;

      selectButton = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      list = new javax.swing.JList();

      getContentPane().setLayout(new java.awt.GridBagLayout());

      addWindowListener(new java.awt.event.WindowAdapter() {
         public void windowClosing(java.awt.event.WindowEvent evt) {
            closeDialog(evt);
         }
      });

      selectButton.setText("Select");
      selectButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            selectButtonActionPerformed(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridx = 0;
      gridBagConstraints.gridy = 1;
      gridBagConstraints.ipadx = 2;
      gridBagConstraints.ipady = 2;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
      gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
      getContentPane().add(selectButton, gridBagConstraints);

      jScrollPane1.setViewportView(list);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      getContentPane().add(jScrollPane1, gridBagConstraints);

      pack();
   }//GEN-END:initComponents


   private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
      Object[] refs = list.getSelectedValues();
      for (int i = 0; i < refs.length; i++) {
         listModel.addElement((String) refs[i]);
         this.refList.add((String) refs[i]);
      }
      list.setModel(listModel);
      dispose();
   }//GEN-LAST:event_selectButtonActionPerformed


   /** Closes the dialog */
   private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog

   }//GEN-LAST:event_closeDialog


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JList list;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JButton selectButton;
   // End of variables declaration//GEN-END:variables

}
