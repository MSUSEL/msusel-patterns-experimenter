====
    The MIT License (MIT)

    MSUSEL Arc Framework
    Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
    Software Engineering Laboratory and Idaho State University, Informatics and
    Computer Science, Empirical Software Engineering Laboratory

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
====

? src/java/org/apache/james/transport/mailets/LogHeaders.java
? src/xdocs/fixcrlf-1922741060
Index: src/java/org/apache/james/core/AbstractJamesService.java
===================================================================
RCS file: /home/cvs/james-server/src/java/org/apache/james/core/AbstractJamesService.java,v
retrieving revision 1.4.4.5
diff -u -r1.4.4.5 AbstractJamesService.java
--- src/java/org/apache/james/core/AbstractJamesService.java	15 Mar 2004 03:54:15 -0000	1.4.4.5
+++ src/java/org/apache/james/core/AbstractJamesService.java	12 May 2004 17:42:35 -0000
@@ -59,6 +59,16 @@
     protected static final String TIMEOUT_NAME = "connectiontimeout";
 
     /**
+     * The default value for the connection backlog.
+     */
+    protected static final int DEFAULT_BACKLOG = 5;
+
+    /**
+     * The name of the parameter defining the connection backlog.
+     */
+    protected static final String BACKLOG_NAME = "connectionBacklog";
+
+    /**
      * The name of the parameter defining the service hello name.
      */
     public static final String HELLO_NAME = "helloName";
@@ -120,6 +130,11 @@
     protected int timeout;
 
     /**
+     * The connection backlog.
+     */
+    protected int backlog;
+
+    /**
      * The hello name for the service.
      */
     protected String helloName;
@@ -252,6 +267,15 @@
                     .append(timeout);
         getLogger().info(infoBuffer.toString());
 
+        backlog = conf.getChild(BACKLOG_NAME).getValueAsInteger(DEFAULT_BACKLOG);
+
+        infoBuffer =
+                    new StringBuffer(64)
+                    .append(getServiceType())
+                    .append(" connection backlog is: ")
+                    .append(backlog);
+        getLogger().info(infoBuffer.toString());
+
         final String location = "generated:" + getServiceType();
 
         if (connectionManager instanceof JamesConnectionManager) {
@@ -300,7 +324,7 @@
         }
 
         ServerSocketFactory factory = socketManager.getServerSocketFactory(serverSocketType);
-        ServerSocket serverSocket = factory.createServerSocket(port, 5, bindTo);
+        ServerSocket serverSocket = factory.createServerSocket(port, backlog, bindTo);
     
         if (null == connectionName) {
             final StringBuffer sb = new StringBuffer();
