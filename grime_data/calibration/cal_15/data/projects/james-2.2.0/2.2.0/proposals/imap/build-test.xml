<?xml version="1.0"?>
<!--

    The MIT License (MIT)

    MSUSEL Arc Framework
    Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
    Software Engineering Laboratory and Idaho State University, Informatics and
    Computer Science, Empirical Software Engineering Laboratory

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

-->
<project default="main" name="IMAP tests" basedir="../..">

  <!--
    Give user a chance to override without editing this file
    (and without typing -D each time he compiles it)
  -->
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <!-- There should be no need to override default compiler but need to change
    javac task to run without this
  <property name="build.compiler" value="classic"/>-->

  <!--
    these are here only for those who use jikes compiler. For other
    developers this part makes no difference.
  -->
  <property name="build.compiler.emacs" value="on"/>
  <property name="build.compiler.pedantic" value="true"/>
  <property name="build.compiler.depend" value="true"/>
  <property name="build.compiler.fulldepend" value="true"/>

  <property name="debug" value="on"/>
  <property name="optimize" value="on"/>
  <property name="deprecation" value="off"/>


  <!-- Set the properties for build directory -->
  <property name="build.dir" value="build"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="build.test.classes" value="${build.dir}/test/classes"/>

  <!-- Set the properties for source directories -->
  <property name="proposal.base" value="proposals"/>
  <property name="proposal.dir" value="${proposal.base}/imap"/>
  <property name="java.proposal.dir" value="${proposal.dir}/java"/>
  <property name="conf.proposal.dir" value="${proposal.dir}/conf"/>
  <property name="test.dir" value="${proposal.dir}/test"/>
  <property name="lib.dir" value="lib"/>

  <path id="test.class.path">
        <path location="${build.classes}"/>
        <fileset dir="${lib.dir}">
            <include name="junit-3.7.jar"/>
            <include name="mail_1_3.jar"/>
            <include name="activation.jar"/>
            <include name="avalon-framework-20011115.jar"/>
            <include name="phoenix-engine-20011230.jar"/>
        </fileset>
  </path>

  <!--
       ===================================================================
                                  Main target
       ===================================================================
  -->
  <target name="main" depends="compile" />

  <target name="clean">
    <delete dir="${build.test.classes}"/>
  </target>

  <target name="clean-james">
    <ant antfile="proposals/imap/build-imap.xml" target="rebuild-dist"/>
  </target>

  <!-- Compiles the Functional tests -->
  <target name="compile">
    <echo message="${java.home}"/>
    <mkdir dir="${build.test.classes}"/>

    <javac destdir="${build.test.classes}"
           debug="${debug}"
           optimize="${optimize}"
           deprecation="${deprecation}">

      <classpath refid="test.class.path">
      </classpath>

      <src path="${test.dir}"/>
    </javac>

    <!-- Copy extra files (resources) into the classes directory -->
    <copy todir="${build.test.classes}">
      <fileset dir="${test.dir}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <!-- Load custom tasks -->
    <taskdef classname="org.apache.james.test.JamesTask" name="james">
        <classpath>
            <path location="${build.dir}/lib/james.bar"/>
            <path location="${build.test.classes}"/>
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <include name="logkit-1.0.jar"/>
                <include name="avalon-scratchpad-20011122.jar"/>
                <include name="avalon-excalibur-20011120.jar"/>
                <include name="avalon-framework-20011115.jar"/>
                <include name="phoenix-engine-20011230.jar"/>
                <include name="phoenix-client-20011230.jar"/>
            </fileset>
        </classpath>
    </taskdef>

  </target>

  <!-- Run the full set of Imap tests -->
  <target name="testimap" depends="testimap-init, testimap-nonauthenticated, testimap-authenticated, testimap-selected" />

  <!-- Initialises the IMAP server for running tests.
       Namely, creates the "imapuser" user, and sends 4 test messages to that user
       via SMTP
  -->
  <target name="testimap-init" depends="compile">
    <junit fork="yes">
        <classpath>
            <pathelement location="${build.test.classes}"/>
            <path refid="test.class.path"/>
        </classpath>
        <formatter type="plain" usefile="false"/>
        <test name="org.apache.james.imapserver.InitialUsers"/>
        <test name="org.apache.james.imapserver.InitialMail"/>
    </junit>
  </target>

  <!-- Tests IMAP commands valid in the NonAuthenticated state -->
  <target name="testimap-nonauthenticated" depends="compile">
    <junit fork="yes">
        <classpath>
            <pathelement location="${build.test.classes}"/>
            <path refid="test.class.path"/>
        </classpath>
        <formatter type="plain" usefile="false"/>
        <test name="org.apache.james.imapserver.TestNonAuthenticated"/>
    </junit>
  </target>

  <!-- Tests IMAP commands valid in the Authenticated state -->
  <target name="testimap-authenticated" depends="compile">
    <junit fork="yes">
        <classpath>
            <pathelement location="${build.test.classes}"/>
            <path refid="test.class.path"/>
        </classpath>
        <formatter type="plain" usefile="false"/>
        <test name="org.apache.james.imapserver.TestAuthenticated"/>
    </junit>
  </target>

  <!-- Tests IMAP commands valid in the selected state -->
  <target name="testimap-selected" depends="compile">
    <junit fork="yes">
        <classpath>
            <pathelement location="${build.test.classes}"/>
            <path refid="test.class.path"/>
        </classpath>
        <formatter type="plain" usefile="false"/>
        <test name="org.apache.james.imapserver.TestSelected"/>
    </junit>
  </target>


  <!-- The following tasks attempt to use ANT to start/stop James. They don't really work at the moment. -->
  <target name="test-james" depends="clean-james, start-james, testimap, stop-james" />

  <target name="start-james" depends="compile">
    <james action="start"/>
  </target>

  <target name="stop-james" depends="compile">
    <james action="stop"/>
  </target>

  <target name="start-stop" depends="compile">
    <james action="start-stop">
        <classpath>
            <path location="${build.dir}/lib/james.bar"/>
            <path location="${build.test.classes}"/>
            <fileset dir="${lib.dir}">
                <include name="*.bar"/>
                <include name="*.jar"/>
                <include name="logkit-1.0.jar"/>
                <include name="avalon-scratchpad-20011122.jar"/>
                <include name="avalon-excalibur-20011120.jar"/>
                <include name="avalon-framework-20011115.jar"/>
                <include name="phoenix-engine-20011230.jar"/>
                <include name="phoenix-client-20011230.jar"/>
            </fileset>
        </classpath>
    </james>
  </target>

</project>

