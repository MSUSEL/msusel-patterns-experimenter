/**
 * The MIT License (MIT)
 *
 * MSUSEL Arc Framework
 * Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
 * Software Engineering Laboratory and Idaho State University, Informatics and
 * Computer Science, Empirical Software Engineering Laboratory
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.hibernate.dialect;
import java.sql.Types;
import java.util.Properties;

import org.hibernate.cfg.Environment;

/**
 * A SQL dialect for Ingres 10 and later versions.
 * <p/>
 * Changes:
 * <ul>
 * <li>Add native BOOLEAN type support</li>
 * <li>Add identity column support</li>
 * </ul>
 *
 * @author Raymond Fan
 */
public class Ingres10Dialect extends Ingres9Dialect {
    public Ingres10Dialect() {
        super();
        registerBooleanSupport();
    }

    // Boolean column type support

    /**
     * The SQL literal value to which this database maps boolean values.
     *
     * @param bool The boolean value
     * @return The appropriate SQL literal.
     */
    public String toBooleanValueString(boolean bool) {
        return bool ? "true" : "false";
    }

    protected void registerBooleanSupport() {
        // Column type

        // Boolean type (mapping/BooleanType) mapping maps SQL BIT to Java
        // Boolean. In order to create a boolean column, BIT needs to be mapped
        // to boolean as well, similar to H2Dialect.
        registerColumnType( Types.BIT, "boolean" );
        registerColumnType( Types.BOOLEAN, "boolean" );

        // Functions

        // true, false and unknown are now valid values
        // Remove the query substitutions previously added in IngresDialect.
        Properties properties = getDefaultProperties();
        String querySubst = properties.getProperty(Environment.QUERY_SUBSTITUTIONS);
        if (querySubst != null) {
            String newQuerySubst = querySubst.replace("true=1,false=0","");
            properties.setProperty(Environment.QUERY_SUBSTITUTIONS, newQuerySubst);
        }
    }

	// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	public boolean supportsIdentityColumns() {
		return true;
	}

	public boolean hasDataTypeInIdentityColumn() {
		return true;
	}

	public String getIdentitySelectString() {
		return "select last_identity()";
	}

	public String getIdentityColumnString() {
		return "not null generated by default as identity";
	}

	public String getIdentityInsertString() {
		return "default";
	}
}
