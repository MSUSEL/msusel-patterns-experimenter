<?xml version="1.0"?>
<!--

    The MIT License (MIT)

    MSUSEL Arc Framework
    Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
    Software Engineering Laboratory and Idaho State University, Informatics and
    Computer Science, Empirical Software Engineering Laboratory

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

-->
<project
    xmlns:ant="jelly:ant"
    xmlns:artifact="artifact"
    xmlns:bsh="jelly:beanshell"
    default="hibernate:install">
  <goal name="hibernate:install">
    <ant:mkdir dir="${maven.xdoclet.hibernatedoclet.destdir}"/>
    <!-- first copy all the java files we might want -->
    <!-- ok - this is very ugly, but how else to do it? -->
    <ant:mkdir dir="${maven.build.dir}/src/java"/>
    <ant:copy todir="${maven.build.dir}/src/java">
      <ant:fileset dir="${basedir}/../addressbook/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../calendar/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../core/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../library/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../search/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../security/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
      <ant:fileset dir="${basedir}/../webmail/src/java">
        <ant:include name="**/*DO.java"/>
      </ant:fileset>
    </ant:copy>

    <!-- let xdoclet generate the hbm.xml files -->
    <attainGoal name="xdoclet:hibernatedoclet"/>
    <!-- copy over the hibernate config file -->
    <ant:copy todir="${maven.xdoclet.hibernatedoclet.destdir}">
      <ant:fileset dir="${basedir}/src/xml">
        <ant:include name="**/*"/>
      </ant:fileset>
    </ant:copy>
    <!-- now build a jar with all the results in -->
    <ant:jar
        destfile="${maven.build.dir}/${maven.final.name}.jar"
        compress="true">
      <!--
        jboss doesn't like the cache file - if you know you don't want
        jboss support, you might want to remove the excludes
      -->
      <ant:zipfileset
          dir="${maven.xdoclet.hibernatedoclet.destdir}"
          excludes="ehcache.xml"/>
    </ant:jar>
    <artifact:install
        artifact="${maven.build.dir}/${maven.final.name}.jar"
        type="jar"
        project="${pom}"/>
  </goal>
</project>

