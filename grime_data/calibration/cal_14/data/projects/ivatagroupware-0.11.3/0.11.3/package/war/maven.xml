<?xml version="1.0"?>
<!--

    The MIT License (MIT)

    MSUSEL Arc Framework
    Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
    Software Engineering Laboratory and Idaho State University, Informatics and
    Computer Science, Empirical Software Engineering Laboratory

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

-->
<project
    xmlns:ant="jelly:ant"
    xmlns:j="jelly:core"
    xmlns:u="jelly:util"
    default="war:install">

  <!--
    copy over the WAR elements of any ivata groupware sub project to the correct
    destination directories.
  -->
  <goal name="copy:subProject">
    <ant:echo message="Copying subproject ${subProject}"/>
    <!-- if you didn't specify a build dir, default to the project name -->
    <j:if test="${buildDir == null}">
      <j:set var="buildDir" value="${pom.artifactId}"/>
    </j:if>

    <!-- not all projects use the same name for target and source dirs -->
    <!-- first the source dirs are chosen -->
    <j:choose>
      <j:when test="${subProject == 'addressBook'}">
        <j:set var="sourceDir" value="addressbook"/>
      </j:when>
      <j:when test="${subProject == 'war'}">
        <j:set var="sourceDir" value="package/war"/>
      </j:when>
      <j:when test="${subProject == 'mail'}">
        <j:set var="sourceDir" value="webmail"/>
      </j:when>
      <j:otherwise>
        <j:set var="sourceDir" value="${subProject}"/>
      </j:otherwise>
    </j:choose>
    <!-- now target dirs are chosen -->
    <j:choose>
      <j:when test="${subProject == 'core'}">
        <j:set var="targetDir" value="."/>
      </j:when>
      <j:when test="${subProject == 'search'}">
        <j:set var="targetDir" value="."/>
      </j:when>
      <j:when test="${subProject == 'security'}">
        <j:set var="targetDir" value="."/>
      </j:when>
      <j:when test="${subProject == 'war'}">
        <j:set var="targetDir" value="."/>
      </j:when>
      <j:otherwise>
        <j:set var="targetDir" value="${subProject}"/>
      </j:otherwise>
    </j:choose>

    <!-- copy over JSP files -->
    <ant:mkdir dir="${maven.build.dir}/${buildDir}/${targetDir}"/>
    <ant:copy todir="${maven.build.dir}/${buildDir}/${targetDir}">
      <ant:fileset dir="${basedir}/../../${sourceDir}/src/web">
        <ant:include name="**/*"/>
        <ant:exclude name="WEB-INF/**"/>
        <ant:exclude name="style/**"/>
      </ant:fileset>
    </ant:copy>
    <!--
      available checks if there is a WEB-INF in the source project - contents
      of the WEB-INF are copied to the target root
    -->
    <u:available file="${basedir}/../../${sourceDir}/src/${buildDir}/WEB-INF">
      <ant:echo message="Copying ${subProject} WEB-INF"/>
      <ant:copy todir="${maven.build.dir}/web">
        <ant:fileset dir="${basedir}/../../${sourceDir}/src/web">
          <ant:include name="WEB-INF/**"/>
        </ant:fileset>
      </ant:copy>
    </u:available>
    <ant:mkdir dir="${maven.build.dir}/${buildDir}/style/${targetDir}"/>
    <!-- not all subprojects have their own style sheets -->
    <u:available file="${basedir}/../../${sourceDir}/src/web/style/template">
      <ant:echo message="Copying ${subProject} style sheet templates"/>
      <ant:mkdir dir="${maven.build.dir}/${buildDir}/style/template/${targetDir}"/>
      <ant:copy todir="${maven.build.dir}/${buildDir}/style/template/${targetDir}">
        <ant:fileset dir="${basedir}/../../${sourceDir}/src/web/style/template">
          <ant:include name="**"/>
        </ant:fileset>
      </ant:copy>
    </u:available>
    <u:available file="${basedir}/../../${sourceDir}/src/web/style">
      <ant:echo message="Copying ${subProject} style sheets (not templates)"/>
      <ant:mkdir dir="${maven.build.dir}/${buildDir}/style/${targetDir}"/>
      <ant:copy todir="${maven.build.dir}/${buildDir}/style/${targetDir}">
        <ant:fileset dir="${basedir}/../../${sourceDir}/src/web/style">
          <ant:include name="**"/>
          <ant:exclude name="template"/>
        </ant:fileset>
      </ant:copy>
    </u:available>
  </goal>
  <!--
    use these goals from the command line to just copy changes in one subproject
  -->
  <goal name="copy:addressBook">
    <j:set var="subProject" value="addressBook"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:calendar">
    <j:set var="subProject" value="calendar"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:core">
    <j:set var="subProject" value="core"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:library">
    <j:set var="subProject" value="library"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:mail">
    <j:set var="subProject" value="mail"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:mask">
    <j:set var="subProject" value="mask"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:search">
    <j:set var="subProject" value="search"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:security">
    <j:set var="subProject" value="security"/>
    <attainGoal name="copy:subProject"/>
  </goal>
  <goal name="copy:war">
    <j:set var="subProject" value="war"/>
    <attainGoal name="copy:subProject"/>
  </goal>

  <!--
    copy all the subprojects - convenient if you changed loadsafiles, or can't
    remember which ones you changed
    :-)
  maven-->
  <goal name="copy:all">
    <attainGoal name="copy:addressBook"/>
    <attainGoal name="copy:calendar"/>
    <attainGoal name="copy:core"/>
    <attainGoal name="copy:library"/>
    <attainGoal name="copy:mail"/>
    <attainGoal name="copy:mask"/>
    <attainGoal name="copy:security"/>
    <attainGoal name="copy:war"/>
  </goal>

  <preGoal name="war:init">
    <ant:unjar
        src="${maven.repo.local}/ivatamasks/jars/ivatamasks-web-${ivatamasks.version}.jar"
        dest="${maven.build.dir}/web">
      <patternset>
        <include name="WEB-INF/*"/>
      </patternset>
    </ant:unjar>
    <!-- extract webtheme war -->
    <ant:mkdir dir="${maven.build.dir}/web/theme"/>
    <ant:unjar
        src="${maven.repo.local}/ivatamasks/wars/ivatamasks-webtheme-war-${ivatamasks.version}.war"
        dest="${maven.build.dir}/web/theme">
      <patternset>
        <exclude name="WEB-INF/**/*"/>
        <exclude name="style/**/*"/>
      </patternset>
    </ant:unjar>
    <ant:unjar
        src="${maven.repo.local}/ivatamasks/wars/ivatamasks-webtheme-war-${ivatamasks.version}.war"
        dest="${maven.build.dir}/web">
      <patternset>
        <include name="WEB-INF/**/*"/>
        <include name="style/**/*"/>
      </patternset>
    </ant:unjar>
    <!-- extract all the hibernate configuration files (created by xdoclet) -->
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-hibernate-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/web/WEB-INF/classes">
    </ant:unjar>
    <!-- extract all the groovy files; they like to be in classes -->
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-addressbook-jar-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/web/WEB-INF/classes">
      <patternset>
        <include name="*.groovy"/>
      </patternset>
    </ant:unjar>
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-calendar-jar-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/web/WEB-INF/classes">
      <patternset>
        <include name="*.groovy"/>
      </patternset>
    </ant:unjar>
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-library-jar-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/web/WEB-INF/classes">
      <patternset>
        <include name="*.groovy"/>
      </patternset>
    </ant:unjar>
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-search-jar-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/web/WEB-INF/classes">
      <patternset>
        <include name="*.groovy"/>
      </patternset>
    </ant:unjar>
    <ant:unjar
        src="${maven.repo.local}/ivatagroupware/jars/ivatagroupware-security-jar-${pom.currentVersion}.jar"
        dest="${maven.build.dir}/web/WEB-INF/classes">
      <patternset>
        <include name="*.groovy"/>
      </patternset>
    </ant:unjar>
    <!--
      these projects are copied from the ivata groupware root
    -->
    <j:set var="buildDir" value="web"/>
    <attainGoal name="copy:all"/>
  </preGoal>
</project>

