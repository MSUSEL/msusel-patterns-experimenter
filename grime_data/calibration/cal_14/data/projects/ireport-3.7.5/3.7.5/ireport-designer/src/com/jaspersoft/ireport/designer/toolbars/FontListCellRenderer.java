/**
 * The MIT License (MIT)
 *
 * MSUSEL Arc Framework
 * Copyright (c) 2015-2019 Montana State University, Gianforte School of Computing,
 * Software Engineering Laboratory and Idaho State University, Informatics and
 * Computer Science, Empirical Software Engineering Laboratory
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 * FontListCellPanel.java
 *
 * Created on 23-ott-2009, 12.16.29
 */

package com.jaspersoft.ireport.designer.toolbars;

import com.jaspersoft.ireport.designer.IReportManager;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.JList;
import javax.swing.JSeparator;
import javax.swing.ListCellRenderer;
import javax.swing.UIManager;
import net.sf.jasperreports.engine.fonts.FontInfo;
import net.sf.jasperreports.engine.util.JRFontUtil;

/**
 *
 * @author gtoffoli
 */
public class FontListCellRenderer extends javax.swing.JPanel implements ListCellRenderer {

    /** Creates new form FontListCellPanel */
    public FontListCellRenderer() {
        initComponents();
    }

    public void setFontInfo(String name, Font font)
    {

        jLabelSample.setFont(font);
        if (font == null || name.length() == 0)
        {
            jLabelSample.setText(" ");
        }
        else
        {
            jLabelSample.setText("Sample");
        }

        jLabelFontName.setText(name);
    }

    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {


        if (value != null)
        {

            if ((value+"").equals("--"))
            {
                JSeparator separator = new JSeparator();
                Dimension size = new Dimension(1,14);
                separator.setPreferredSize(size);
                return separator;
            }

            ClassLoader cl = Thread.currentThread().getContextClassLoader();
            try {

                Thread.currentThread().setContextClassLoader(IReportManager.getJRExtensionsClassLoader());

                Font f = JRFontUtil.getAwtFontFromBundles(""+value, Font.PLAIN, 12, null, true);
                if (f == null)
                {
                    f = new Font("" + value, Font.PLAIN, 12);
                }
                setFontInfo(""+value, f);

            } finally
            {
                Thread.currentThread().setContextClassLoader(cl);
            }
        }

        if (!isSelected)
        {
            Color c = UIManager.getColor("List.background");
            if (c != null) this.setBackground(c);
            c = UIManager.getColor("List.foreground");
            if (c != null)
            {
                jLabelFontName.setForeground(c);
                jLabelSample.setForeground(c);
            }
        }
        else
        {
            Color c = UIManager.getColor("List.selectionBackground");
            if (c != null) this.setBackground(c);
            c = UIManager.getColor("List.selectionForeground");
            if (c != null)
            {
                jLabelFontName.setForeground(c);
                jLabelSample.setForeground(c);
            }
        }
        
        return this;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelFontName = new javax.swing.JLabel();
        jLabelSample = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jLabelFontName.setText(org.openide.util.NbBundle.getMessage(FontListCellRenderer.class, "FontListCellRenderer.jLabelFontName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        add(jLabelFontName, gridBagConstraints);

        jLabelSample.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSample.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelSample.setText(org.openide.util.NbBundle.getMessage(FontListCellRenderer.class, "FontListCellRenderer.jLabelSample.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        add(jLabelSample, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelFontName;
    private javax.swing.JLabel jLabelSample;
    // End of variables declaration//GEN-END:variables

}
